% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ap_is_api.R
\docType{class}
\name{APIsApi}
\alias{APIsApi}
\title{APIs operations}
\format{
An \code{R6Class} generator object
}
\description{
singlearity.APIs
}
\section{Methods}{

\describe{
\strong{ GetGameSim } \emph{ Get Game Sim }


\itemize{
\item \emph{ @param } body.get.game.sim.game.sim.post \link{BodyGetGameSimGameSimPost}
\item \emph{ @param } num.sims integer
\item \emph{ @returnType } list( \link{GameSimResults} ) \cr


\item status code : 200 | Successful Response

\item return type : array[GameSimResults] 
\item response headers :

\tabular{ll}{
}
\item status code : 422 | Validation Error

\item return type : HTTPValidationError 
\item response headers :

\tabular{ll}{
}
}

\strong{ GetPaSim } \emph{ Get Pa Sim }


\itemize{
\item \emph{ @param } matchup list( \link{Matchup} )
\item \emph{ @param } return.features character


\item status code : 200 | Successful Response

\item return type : object 
\item response headers :

\tabular{ll}{
}
\item status code : 422 | Validation Error

\item return type : HTTPValidationError 
\item response headers :

\tabular{ll}{
}
}

\strong{ GetPlayers } \emph{ Get Players }


\itemize{
\item \emph{ @param } name character
\item \emph{ @param } id integer
\item \emph{ @param } team.name character
\item \emph{ @param } team.id integer
\item \emph{ @param } position list( character )
\item \emph{ @param } age.min integer
\item \emph{ @param } age.max integer
\item \emph{ @param } pitch.hand list( character )
\item \emph{ @param } bat.side list( character )
\item \emph{ @param } active character
\item \emph{ @param } on.40 character
\item \emph{ @returnType } list( \link{Player} ) \cr


\item status code : 200 | Successful Response

\item return type : array[Player] 
\item response headers :

\tabular{ll}{
}
\item status code : 422 | Validation Error

\item return type : HTTPValidationError 
\item response headers :

\tabular{ll}{
}
}

\strong{ GetTeams } \emph{ Get Teams }


\itemize{
\item \emph{ @param } name character
\item \emph{ @returnType } list( \link{Team} ) \cr


\item status code : 200 | Successful Response

\item return type : array[Team] 
\item response headers :

\tabular{ll}{
}
\item status code : 422 | Validation Error

\item return type : HTTPValidationError 
\item response headers :

\tabular{ll}{
}
}

\strong{ GetVenues } \emph{ Get Venues }


\itemize{
\item \emph{ @param } stadium.name character
\item \emph{ @param } team.name character
\item \emph{ @returnType } list( \link{Venue} ) \cr


\item status code : 200 | Successful Response

\item return type : array[Venue] 
\item response headers :

\tabular{ll}{
}
\item status code : 422 | Validation Error

\item return type : HTTPValidationError 
\item response headers :

\tabular{ll}{
}
}

\strong{ Hello } \emph{ Hello }


\itemize{


\item status code : 200 | Successful Response

\item return type : object 
\item response headers :

\tabular{ll}{
}
}

\strong{ HelloWithKey } \emph{ Hello With Key }


\itemize{


\item status code : 200 | Successful Response

\item return type : object 
\item response headers :

\tabular{ll}{
}
}

}
}

\examples{
\dontrun{
####################  GetGameSim  ####################

library(singlearity)
var.body.get.game.sim.game.sim.post <- BodyGetGameSimGameSimPost$new() # BodyGetGameSimGameSimPost | 
var.num.sims <- 100 # integer | 

#Get Game Sim
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$GetGameSim(var.body.get.game.sim.game.sim.post, num.sims=var.num.sims)


####################  GetPaSim  ####################

library(singlearity)
var.matchup <- [Matchup$new()] # array[Matchup] | 
var.return.features <- FALSE # character | 

#Get Pa Sim
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$GetPaSim(var.matchup, return.features=var.return.features)


####################  GetPlayers  ####################

library(singlearity)
var.name <- 'name_example' # character | 
var.id <- 56 # integer | 
var.team.name <- 'team.name_example' # character | 
var.team.id <- 56 # integer | 
var.position <- ['position_example'] # array[character] | 
var.age.min <- 56 # integer | 
var.age.max <- 56 # integer | 
var.pitch.hand <- ['pitch.hand_example'] # array[character] | 
var.bat.side <- ['bat.side_example'] # array[character] | 
var.active <- 'active_example' # character | 
var.on.40 <- 'on.40_example' # character | 

#Get Players
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$GetPlayers(name=var.name, id=var.id, team.name=var.team.name, team.id=var.team.id, position=var.position, age.min=var.age.min, age.max=var.age.max, pitch.hand=var.pitch.hand, bat.side=var.bat.side, active=var.active, on.40=var.on.40)


####################  GetTeams  ####################

library(singlearity)
var.name <- 'name_example' # character | 

#Get Teams
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$GetTeams(name=var.name)


####################  GetVenues  ####################

library(singlearity)
var.stadium.name <- 'stadium.name_example' # character | 
var.team.name <- 'team.name_example' # character | 

#Get Venues
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$GetVenues(stadium.name=var.stadium.name, team.name=var.team.name)


####################  Hello  ####################

library(singlearity)

#Hello
api.instance <- APIsApi$new()

result <- api.instance$Hello()


####################  HelloWithKey  ####################

library(singlearity)

#Hello With Key
api.instance <- APIsApi$new()

#Configure API key authorization: APIKeyHeader
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

#Configure API key authorization: APIKeyQuery
api.instance$apiClient$apiKeys['SINGLEARITY_API_KEY'] <- 'TODO_YOUR_API_KEY';

result <- api.instance$HelloWithKey()


}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{apiClient}}{Handles the client-server communication.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{APIsApi$new()}}
\item \href{#method-GetGameSim}{\code{APIsApi$GetGameSim()}}
\item \href{#method-GetGameSimWithHttpInfo}{\code{APIsApi$GetGameSimWithHttpInfo()}}
\item \href{#method-GetPaSim}{\code{APIsApi$GetPaSim()}}
\item \href{#method-GetPaSimWithHttpInfo}{\code{APIsApi$GetPaSimWithHttpInfo()}}
\item \href{#method-GetPlayers}{\code{APIsApi$GetPlayers()}}
\item \href{#method-GetPlayersWithHttpInfo}{\code{APIsApi$GetPlayersWithHttpInfo()}}
\item \href{#method-GetTeams}{\code{APIsApi$GetTeams()}}
\item \href{#method-GetTeamsWithHttpInfo}{\code{APIsApi$GetTeamsWithHttpInfo()}}
\item \href{#method-GetVenues}{\code{APIsApi$GetVenues()}}
\item \href{#method-GetVenuesWithHttpInfo}{\code{APIsApi$GetVenuesWithHttpInfo()}}
\item \href{#method-Hello}{\code{APIsApi$Hello()}}
\item \href{#method-HelloWithHttpInfo}{\code{APIsApi$HelloWithHttpInfo()}}
\item \href{#method-HelloWithKey}{\code{APIsApi$HelloWithKey()}}
\item \href{#method-HelloWithKeyWithHttpInfo}{\code{APIsApi$HelloWithKeyWithHttpInfo()}}
\item \href{#method-clone}{\code{APIsApi$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$new(apiClient)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetGameSim"></a>}}
\if{latex}{\out{\hypertarget{method-GetGameSim}{}}}
\subsection{Method \code{GetGameSim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetGameSim(body.get.game.sim.game.sim.post, num.sims = 100, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetGameSimWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetGameSimWithHttpInfo}{}}}
\subsection{Method \code{GetGameSimWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetGameSimWithHttpInfo(
  body.get.game.sim.game.sim.post,
  num.sims = 100,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetPaSim"></a>}}
\if{latex}{\out{\hypertarget{method-GetPaSim}{}}}
\subsection{Method \code{GetPaSim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetPaSim(matchup, return.features = FALSE, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetPaSimWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetPaSimWithHttpInfo}{}}}
\subsection{Method \code{GetPaSimWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetPaSimWithHttpInfo(matchup, return.features = FALSE, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetPlayers"></a>}}
\if{latex}{\out{\hypertarget{method-GetPlayers}{}}}
\subsection{Method \code{GetPlayers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetPlayers(
  name = NULL,
  id = NULL,
  team.name = NULL,
  team.id = NULL,
  position = NULL,
  age.min = NULL,
  age.max = NULL,
  pitch.hand = NULL,
  bat.side = NULL,
  active = NULL,
  on.40 = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetPlayersWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetPlayersWithHttpInfo}{}}}
\subsection{Method \code{GetPlayersWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetPlayersWithHttpInfo(
  name = NULL,
  id = NULL,
  team.name = NULL,
  team.id = NULL,
  position = NULL,
  age.min = NULL,
  age.max = NULL,
  pitch.hand = NULL,
  bat.side = NULL,
  active = NULL,
  on.40 = NULL,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetTeams"></a>}}
\if{latex}{\out{\hypertarget{method-GetTeams}{}}}
\subsection{Method \code{GetTeams()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetTeams(name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetTeamsWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetTeamsWithHttpInfo}{}}}
\subsection{Method \code{GetTeamsWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetTeamsWithHttpInfo(name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetVenues"></a>}}
\if{latex}{\out{\hypertarget{method-GetVenues}{}}}
\subsection{Method \code{GetVenues()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetVenues(stadium.name = NULL, team.name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-GetVenuesWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-GetVenuesWithHttpInfo}{}}}
\subsection{Method \code{GetVenuesWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$GetVenuesWithHttpInfo(stadium.name = NULL, team.name = NULL, ...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Hello"></a>}}
\if{latex}{\out{\hypertarget{method-Hello}{}}}
\subsection{Method \code{Hello()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$Hello(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HelloWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-HelloWithHttpInfo}{}}}
\subsection{Method \code{HelloWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$HelloWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HelloWithKey"></a>}}
\if{latex}{\out{\hypertarget{method-HelloWithKey}{}}}
\subsection{Method \code{HelloWithKey()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$HelloWithKey(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-HelloWithKeyWithHttpInfo"></a>}}
\if{latex}{\out{\hypertarget{method-HelloWithKeyWithHttpInfo}{}}}
\subsection{Method \code{HelloWithKeyWithHttpInfo()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$HelloWithKeyWithHttpInfo(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{APIsApi$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
